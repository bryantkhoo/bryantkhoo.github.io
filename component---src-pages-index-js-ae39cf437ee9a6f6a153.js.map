{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","props","state","category","selectCategory","this","setState","render","data","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","location","class","role","aria-label","onClick","map","node","frontmatter","fields","slug","tags","includes","key","style","marginBottom","rhythm","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","React","Component","pageQuery"],"mappings":"mQASMA,E,oBACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CAACC,SAAU,QAFP,E,kHAKnBC,eAAA,SAAeD,GACbE,KAAKC,SAAS,CACZH,c,EAGJI,OAAA,WAAU,IAAD,OACCC,EAASH,KAAKJ,MAAdO,KACFC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAQL,EAAKM,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQC,SAAUX,KAAKJ,MAAMe,SAAUJ,MAAOH,GAC5C,kBAAC,IAAD,CAAKG,MAAM,gBACX,kBAAC,IAAD,MACA,yBAAKK,MAAM,oBAAoBC,KAAK,QAAQC,aAAW,OACrD,4BAAQF,MAAM,cAAcG,QAAS,kBAAI,EAAKhB,eAAe,UAA7D,QACA,4BAAQa,MAAM,cAAcG,QAAS,kBAAI,EAAKhB,eAAe,YAA7D,UACA,4BAAQa,MAAM,cAAcG,QAAS,kBAAI,EAAKhB,eAAe,cAA7D,aAEDS,EAAMQ,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNV,EAAQU,EAAKC,YAAYX,OAASU,EAAKE,OAAOC,KACpD,GAAIH,EAAKC,YAAYG,KAAKC,SAAS,EAAKzB,MAAMC,UAC5C,OACE,yBAAKyB,IAAKN,EAAKE,OAAOC,MACpB,wBACEI,MAAO,CACLC,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAU,QAAWC,GAAIX,EAAKE,OAAOC,MACjDb,IAGL,+BAAQU,EAAKC,YAAYW,MACzB,uBACEC,wBAAyB,CACvBC,OAAQd,EAAKC,YAAYc,aAAef,EAAKgB,iB,GA1CzCC,IAAMC,WAsDfxC,YAER,IAAMyC,EAAS,c","file":"component---src-pages-index-js-ae39cf437ee9a6f6a153.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport \"purecss/build/pure.css\"\n\nclass BlogIndex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {category: \"blog\"}\n  }\n\n  selectCategory(category){\n    this.setState({\n      category\n    });\n  }\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"Bryant Khoo\" />\n        <Bio />\n        <div class=\"pure-button-group\" role=\"group\" aria-label=\"...\">\n          <button class=\"pure-button\" onClick={()=>this.selectCategory('blog')}>Blog</button>\n          <button class=\"pure-button\" onClick={()=>this.selectCategory('coding')}>Coding</button>\n          <button class=\"pure-button\" onClick={()=>this.selectCategory('tutorial')}>Tutorial</button>\n        </div>\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          if (node.frontmatter.tags.includes(this.state.category)){\n            return (\n              <div key={node.fields.slug}>\n                <h3\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </h3>\n                <small>{node.frontmatter.date}</small>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n              </div>\n            )\n          }\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}